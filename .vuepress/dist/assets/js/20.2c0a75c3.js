(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{419:function(t,e,a){"use strict";a.r(e);var s=a(56),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"queues"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#queues"}},[t._v("#")]),t._v(" Queues")]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#introduction"}},[t._v("Introduction")])]),a("li",[a("a",{attrs:{href:"#custom-queue-names"}},[t._v("Custom Queue Names")]),a("ul",[a("li",[a("a",{attrs:{href:"#disabling-the-queue"}},[t._v("Disabling The Queue")])])])]),a("li",[a("a",{attrs:{href:"#queue-concurrency"}},[t._v("Queue Concurrency")])]),a("li",[a("a",{attrs:{href:"#queue-visibility-timeout"}},[t._v("Queue Visibility Timeout")])]),a("li",[a("a",{attrs:{href:"#queue-memory"}},[t._v("Queue Memory")])]),a("li",[a("a",{attrs:{href:"#queue-database-connections"}},[t._v("Queue Database Connections")])]),a("li",[a("a",{attrs:{href:"#monitoring-jobs"}},[t._v("Monitoring Jobs")])])])]),a("p"),t._v(" "),a("h2",{attrs:{id:"introduction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),a("p",[t._v("Laravel's queues are one of the framework's most powerful features. With Vapor, you can continue writing and dispatching queued jobs exactly as you would in a traditional server-hosted Laravel application. The only difference is that Vapor will automatically scale your queue processing throughput on-demand within seconds:")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token package"}},[t._v("App"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Jobs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ProcessPodcast")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("ProcessPodcast")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$podcast")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("When using Vapor, your application will use the AWS SQS service, which is already a first-party queue driver within Laravel. Vapor will automatically configure your deployed application to use this queue driver by injecting the proper Laravel environment variables. You do not need to perform any additional configuration.")]),t._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[t._v("Queued Job Time Limits")]),t._v(" "),a("p",[t._v('Currently, serverless applications on AWS may only process a single request (web or queue) for a maximum of 15 minutes. If your queued jobs take longer than 15 minutes, you will need to either chunk your job\'s work into smaller pieces or consider another deployment solution for your application. In addition, a queued job may not have a "delay" greater than 15 minutes.')])]),t._v(" "),a("h2",{attrs:{id:"custom-queue-names"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#custom-queue-names"}},[t._v("#")]),t._v(" Custom Queue Names")]),t._v(" "),a("p",[t._v("By default, Vapor will create an SQS queue that has the same name as your project and inject the proper environment variables to make this queue the default queue. If you would like to specify your own custom queue names that Vapor should create instead, you may define a "),a("code",[t._v("queues")]),t._v(" option in your environment's "),a("code",[t._v("vapor.yml")]),t._v(' configuration. The first queue in the list of queues will be considered your "default" queue and will automatically be set as the '),a("code",[t._v("SQS_QUEUE")]),t._v(" environment variable:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" vapor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("laravel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("app\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environments")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("production")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("queues")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" emails\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" invoices\n")])])]),a("h3",{attrs:{id:"disabling-the-queue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#disabling-the-queue"}},[t._v("#")]),t._v(" Disabling The Queue")]),t._v(" "),a("p",[t._v("If your application does not use queues, you may set the environment's "),a("code",[t._v("queues")]),t._v(" option to "),a("code",[t._v("false")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" vapor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("laravel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("app\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environments")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("production")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("queues")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'composer install --no-dev'")]),t._v("\n")])])]),a("h2",{attrs:{id:"queue-concurrency"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#queue-concurrency"}},[t._v("#")]),t._v(" Queue Concurrency")]),t._v(" "),a("p",[t._v("By default, Vapor will allow your queue to process jobs at max concurrency, which is typically 1,000 concurrent jobs executing at the same time. If you would like to reduce the maximum queue concurrency, you may define the "),a("code",[t._v("queue-concurrency")]),t._v(" option in the environment's "),a("code",[t._v("vapor.yml")]),t._v(" configuration:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" vapor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("laravel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("app\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environments")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("production")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("queue-concurrency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'composer install --no-dev'")]),t._v("\n")])])]),a("p",[t._v("When using multiple custom queues, the "),a("code",[t._v("queue-concurrency")]),t._v(" option defines the maximum concurrency per queue. For example, if you were to define two custom queues and a "),a("code",[t._v("queue-concurrency")]),t._v(" of 100 the total maximum concurrency will be 200.")]),t._v(" "),a("h2",{attrs:{id:"queue-visibility-timeout"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#queue-visibility-timeout"}},[t._v("#")]),t._v(" Queue Visibility Timeout")]),t._v(" "),a("p",[t._v('By default, if your queued job is not deleted or released within one minute of beginning to process, SQS will retry the job. To configure this "visibility timeout", you may define the '),a("code",[t._v("queue-timeout")]),t._v(" option in the environment's "),a("code",[t._v("vapor.yml")]),t._v(" configuration. For example, we may set this timeout to five minutes:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" vapor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("laravel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("app\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environments")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("production")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("queue-timeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'composer install --no-dev'")]),t._v("\n")])])]),a("h2",{attrs:{id:"queue-memory"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#queue-memory"}},[t._v("#")]),t._v(" Queue Memory")]),t._v(" "),a("p",[t._v("You may use the "),a("code",[t._v("queue-memory")]),t._v(" option in your environment's "),a("code",[t._v("vapor.yml")]),t._v(" configuration to define the memory that should be available to your queue worker Lambda function:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" vapor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("laravel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("app\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environments")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("production")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("queue-memory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'composer install --no-dev'")]),t._v("\n")])])]),a("h2",{attrs:{id:"queue-database-connections"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#queue-database-connections"}},[t._v("#")]),t._v(" Queue Database Connections")]),t._v(" "),a("p",[t._v("By default, database connections do not persist between queued jobs, ensuring that the database does not get overwhelmed with active connections. However, if your database can handle a large number of connections and you want to reduce the overhead involved in creating a database connection on each job, you may define the "),a("code",[t._v("queue-database-session-persist")]),t._v(" option in your environment's "),a("code",[t._v("vapor.yml")]),t._v(" configuration file to instruct Vapor to reuse the same database connection across jobs:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" vapor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("laravel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("app\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environments")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("production")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("queue-database-session-persist")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'composer install --no-dev'")]),t._v("\n")])])]),a("h2",{attrs:{id:"monitoring-jobs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#monitoring-jobs"}},[t._v("#")]),t._v(" Monitoring Jobs")]),t._v(" "),a("p",[t._v("If you have installed the "),a("RouterLink",{attrs:{to:"/1.0/introduction.html#installing-the-vapor-ui-dashboard"}},[t._v("Vapor UI dashboard package")]),t._v(", you may access the "),a("code",[t._v("/vapor-ui/jobs/metrics")]),t._v(" URI to monitor queue jobs.")],1),t._v(" "),a("p",[t._v("Within the Vapor UI dashboard, you can monitor (in real-time) the number of processed jobs, failed jobs, and pending jobs for your Vapor application. In addition, it includes charts providing job statistics over the last 24 hours, allowing you to understand better the trends of your queue.")]),t._v(" "),a("p",[t._v("Furthermore, you may access the "),a("code",[t._v("/vapor-ui/jobs/failed")]),t._v(" to view the list of failed jobs, their details, job IDs, connections, queues, failures times, and other information about the jobs. From this screen, you may choose to retry or delete the failed job.")])])}),[],!1,null,null,null);e.default=n.exports}}]);